{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","react_default","a","createElement","EventNote_default","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","DeleteOutline_default","CreateArea","_useState","useState","_useState2","Object","slicedToArray","newNote","setNewNote","_useState3","_useState4","isClicked","setIsClicked","createNote","event","_event$target","target","name","value","prevValue","objectSpread","defineProperty","onSubmit","onAdd","preventDefault","onChange","placeholder","rows","Zoom","in","Fab","type","Add_default","App","allNotes","setAllNotes","deleteNote","prevNotes","filter","note","index","components_Header","components_CreateArea","concat","toConsumableArray","map","foundNote","components_Note","key","components_Footer","ReactDOM","createRoot","document","getElementById","render","components_App"],"mappings":"yMAeeA,MAXf,WACE,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,MADF,YCQSG,MAZf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cAExB,OACEP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,6BAAgBG,uBCWTG,EAfF,SAACC,GAAD,OACXT,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,QACbV,EAAAC,EAAAC,cAAA,UAAKO,EAAME,OACXX,EAAAC,EAAAC,cAAA,SAAIO,EAAMG,SAEVZ,EAAAC,EAAAC,cAAA,UACEW,QAAS,WACPJ,EAAMK,SAASL,EAAMM,MAGvBf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,yDC+CSgB,MAzDf,SAAoBR,GAAO,IAAAS,EACKC,mBAAS,IADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClBK,EADkBH,EAAA,GACTI,EADSJ,EAAA,GAAAK,EAESN,oBAAS,GAFlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAElBE,EAFkBD,EAAA,GAEPE,EAFOF,EAAA,GAKzB,SAASG,EAAWC,GAAO,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdV,EAAW,SAACW,GACV,OAAOd,OAAAe,EAAA,EAAAf,CAAA,GACFc,EADLd,OAAAgB,EAAA,EAAAhB,CAAA,GAEGY,EAAOC,MAQd,OACElC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,QACEQ,UAAU,cACV4B,SAAU,SAACR,GACTrB,EAAM8B,MAAMhB,GAEZO,EAAMU,iBACNhB,EAAW,CAAEb,MAAO,GAAIC,QAAS,OAIlCe,GACC3B,EAAAC,EAAAC,cAAA,SACEuC,SAAUZ,EACVK,MAAOX,EAAQZ,MACfsB,KAAK,QACLS,YAAY,UAGhB1C,EAAAC,EAAAC,cAAA,YACEW,QA1BR,WACEe,GAAa,IA0BPa,SAAUZ,EACVK,MAAOX,EAAQX,QACfqB,KAAK,UACLS,YAAY,iBACZC,KAAMhB,EAAY,EAAI,IAExB3B,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAMC,GAAIlB,GACR3B,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAKC,KAAK,UACR/C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,WCRGgD,MAvCf,WAAe,IAAA/B,EACmBC,mBAAS,IAD5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNgC,EADM9B,EAAA,GACI+B,EADJ/B,EAAA,GAYb,SAASgC,EAAWrC,GAClBoC,EAAY,SAACE,GACX,OAAOH,EAASI,OAAO,SAACC,EAAMC,GAC5B,OAAOA,IAAUzC,MAKvB,OACEf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAACwD,EAAD,CAAYnB,MAlBhB,SAAiBhB,GACf4B,EAAY,SAACE,GACX,SAAAM,OAAAtC,OAAAuC,EAAA,EAAAvC,CAAWgC,GAAX,CAAsB9B,SAkBrB2B,EAASW,IAAI,SAACC,EAAWN,GAAZ,OACZxD,EAAAC,EAAAC,cAAC6D,EAAD,CACEC,IAAKR,EACLzC,GAAIyC,EACJ7C,MAAOmD,EAAUnD,MACjBC,QAASkD,EAAUlD,QACnBE,SAAUsC,MAGdpD,EAAAC,EAAAC,cAAC+D,EAAD,QCnCOC,IAASC,WAAWC,SAASC,eAAe,SAGpDC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD","file":"static/js/main.4f03e9bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport EventNoteIcon from \"@mui/icons-material/EventNote\";\r\n\r\n//render header\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>\r\n        <EventNoteIcon />\r\n        Keeper\r\n      </h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\n//create a footer with the current year rendering dynamically.\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <p>Copyright â“’ {year}</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport notes from \"../notes.js\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\n\r\n//render notes dynamically by accessing props from app.jsx\r\nconst Note = (props) => (\r\n  <div className=\"note\">\r\n    <h1>{props.title}</h1>\r\n    <p>{props.content}</p>\r\n    {/* When button is clicked, trigger deleteNote function in App and pass the Id of the item to be deleted */}\r\n    <button\r\n      onClick={() => {\r\n        props.onDelete(props.id);\r\n      }}\r\n    >\r\n      <DeleteOutlineIcon />\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport Zoom from \"@mui/material/Zoom\";\r\n\r\nfunction CreateArea(props) {\r\n  const [newNote, setNewNote] = useState({});\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  // Capture the change event and the field that changed, save the values into newNote.\r\n  function createNote(event) {\r\n    const { name, value } = event.target;\r\n    setNewNote((prevValue) => {\r\n      return {\r\n        ...prevValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n  function expand() {\r\n    setIsClicked(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* When form is submitted, trigger onAdd prop and pass newNote value, then set the note area empty. */}\r\n      <form\r\n        className=\"create-note\"\r\n        onSubmit={(event) => {\r\n          props.onAdd(newNote);\r\n          // Prevent page from refreshing when form is submitted.\r\n          event.preventDefault();\r\n          setNewNote({ title: \"\", content: \"\" });\r\n        }}\r\n      >\r\n        {/* Set value fields for title and content input to have consistent values within the App */}\r\n        {isClicked && (\r\n          <input\r\n            onChange={createNote}\r\n            value={newNote.title}\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n          />\r\n        )}\r\n        <textarea\r\n          onClick={expand}\r\n          onChange={createNote}\r\n          value={newNote.content}\r\n          name=\"content\"\r\n          placeholder=\"Take a note...\"\r\n          rows={isClicked ? 3 : 1}\r\n        />\r\n        <Zoom in={isClicked}>\r\n          <Fab type=\"submit\">\r\n            <AddIcon />\r\n          </Fab>\r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport notes from \"../notes\";\r\nimport CreateArea from \"./CreateArea\";\r\n\r\nfunction App() {\r\n  const [allNotes, setAllNotes] = useState([]);\r\n\r\n  // Set allNotes array with the previous notes\r\n  // and the newNote that's passed over here from CreateArea component.\r\n  function addNote(newNote) {\r\n    setAllNotes((prevNotes) => {\r\n      return [...prevNotes, newNote];\r\n    });\r\n  }\r\n\r\n  //Filter allNotes array and exclude the clicked item by matching it's id.\r\n  function deleteNote(id) {\r\n    setAllNotes((prevNotes) => {\r\n      return allNotes.filter((note, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CreateArea onAdd={addNote} />\r\n      {/* map the allNotes array, assign keys and id's and render each item in the array */}\r\n      {allNotes.map((foundNote, index) => (\r\n        <Note\r\n          key={index}\r\n          id={index}\r\n          title={foundNote.title}\r\n          content={foundNote.content}\r\n          onDelete={deleteNote}\r\n        />\r\n      ))}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","//1. Create a new React app.\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.jsx\";\n\n//create root to inject react code into index.html\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\n//render app.jsx\nroot.render(<App />);\n"],"sourceRoot":""}